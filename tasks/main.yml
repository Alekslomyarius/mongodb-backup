---
- name: Python and pip3 install 
  package:
     name: "{{ item }}"
     state: present
  loop: "{{ backup_notifications.requirements }}"
  become: yes
  when: backup_notifications.enabled 

- name: Install aprise packages
  pip:  
    name:  apprise
    state: present
  become: yes
  when: backup_notifications.enabled
  
- name: Create a config dir
  file:
    path: "/etc/backup"
    state: directory
    mode: "0600"

- name: Create AWS credentials file
  template:
    src: credentials.j2
    dest: "/etc/backup/credentials"
    mode: "0600"

- name: Copy backup executable
  copy:
    src: "rocketchat_backup.sh"
    dest: "/usr/local/bin/"
    mode: "0700"

- name: Copy backup aprise config
  template:
    src: "apprise_config.j2"
    dest: /etc/backup/apprise_config
    mode: "600"
  when: backup_notifications.enabled and backup_notifications.apprise_target != ""

- name: delete apprise_config when notification is turned off
  file:
    path: /etc/backup/apprise_config
    state: absent
  when: not backup_notifications.enabled or backup_notifications.apprise_target == ""

- name: Configure cron tasks
  cron:
    name: "{{ rocketchat_backup.cron.name }}"
    minute: "{{ rocketchat_backup.cron.minute is defined | ternary(rocketchat_backup.cron.minute, '*') }}"
    hour: "{{ rocketchat_backup.cron.hour is defined | ternary(rocketchat_backup.cron.hour, '*') }}"
    day: "{{ rocketchat_backup.cron.day is defined | ternary(rocketchat_backup.cron.day, '*') }}"
    weekday: "{{ rocketchat_backup.cron.weekday is defined | ternary(rocketchat_backup.cron.weekday, '*') }}"
    month: "{{ rocketchat_backup.cron.month is defined | ternary(rocketchat_backup.cron.month, '*') }}"
    job: |
          /usr/local/bin/rocketchat_backup.sh -f {{ rocketchat_backup.rocketchat_folder }} -d {{ rocketchat_backup.s3_destination }} {{ rocketchat_backup.retain_count is defined | ternary(" ".join(("-r", rocketchat_backup.retain_count | string)), "") }} > /dev/null 2>&1